// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.mar.web;

import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonNode;
import com.mar.entities.ScreeningRoom;
import com.mar.service.api.ScreeningRoomService;
import com.mar.web.ScreeningRoomDeserializer;
import io.springlets.web.NotFoundException;
import java.io.IOException;
import org.springframework.boot.jackson.JsonComponent;
import org.springframework.core.convert.ConversionService;

privileged aspect ScreeningRoomDeserializer_Roo_EntityDeserializer {
    
    declare @type: ScreeningRoomDeserializer: @JsonComponent;
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return ScreeningRoomService
     */
    public ScreeningRoomService ScreeningRoomDeserializer.getScreeningRoomService() {
        return screeningRoomService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param screeningRoomService
     */
    public void ScreeningRoomDeserializer.setScreeningRoomService(ScreeningRoomService screeningRoomService) {
        this.screeningRoomService = screeningRoomService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return ConversionService
     */
    public ConversionService ScreeningRoomDeserializer.getConversionService() {
        return conversionService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param conversionService
     */
    public void ScreeningRoomDeserializer.setConversionService(ConversionService conversionService) {
        this.conversionService = conversionService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param jsonParser
     * @param context
     * @param codec
     * @param tree
     * @return ScreeningRoom
     * @throws IOException
     */
    public ScreeningRoom ScreeningRoomDeserializer.deserializeObject(JsonParser jsonParser, DeserializationContext context, ObjectCodec codec, JsonNode tree) throws IOException {
        String idText = tree.asText();
        Long id = conversionService.convert(idText, Long.class);
        ScreeningRoom screeningRoom = screeningRoomService.findOne(id);
        if (screeningRoom == null) {
            throw new NotFoundException("ScreeningRoom not found");
        }
        return screeningRoom;
    }
    
}
