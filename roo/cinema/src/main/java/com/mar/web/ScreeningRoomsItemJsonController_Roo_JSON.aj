// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.mar.web;

import com.mar.entities.ScreeningRoom;
import com.mar.service.api.ScreeningRoomService;
import com.mar.web.ScreeningRoomsItemJsonController;
import io.springlets.web.NotFoundException;
import javax.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder;
import org.springframework.web.util.UriComponents;

privileged aspect ScreeningRoomsItemJsonController_Roo_JSON {
    
    declare @type: ScreeningRoomsItemJsonController: @RestController;
    
    declare @type: ScreeningRoomsItemJsonController: @RequestMapping(value = "/api/screeningrooms/{screeningRoom}", name = "ScreeningRoomsItemJsonController", produces = MediaType.APPLICATION_JSON_VALUE);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private ScreeningRoomService ScreeningRoomsItemJsonController.screeningRoomService;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param screeningRoomService
     */
    @Autowired
    public ScreeningRoomsItemJsonController.new(ScreeningRoomService screeningRoomService) {
        this.screeningRoomService = screeningRoomService;
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return ScreeningRoomService
     */
    public ScreeningRoomService ScreeningRoomsItemJsonController.getScreeningRoomService() {
        return screeningRoomService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param screeningRoomService
     */
    public void ScreeningRoomsItemJsonController.setScreeningRoomService(ScreeningRoomService screeningRoomService) {
        this.screeningRoomService = screeningRoomService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return ScreeningRoom
     */
    @ModelAttribute
    public ScreeningRoom ScreeningRoomsItemJsonController.getScreeningRoom(@PathVariable("screeningRoom") Long id) {
        ScreeningRoom screeningRoom = screeningRoomService.findOne(id);
        if (screeningRoom == null) {
            throw new NotFoundException(String.format("ScreeningRoom with identifier '%s' not found",id));
        }
        return screeningRoom;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param screeningRoom
     * @return ResponseEntity
     */
    @GetMapping(name = "show")
    public ResponseEntity<?> ScreeningRoomsItemJsonController.show(@ModelAttribute ScreeningRoom screeningRoom) {
        return ResponseEntity.ok(screeningRoom);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param screeningRoom
     * @return UriComponents
     */
    public static UriComponents ScreeningRoomsItemJsonController.showURI(ScreeningRoom screeningRoom) {
        return MvcUriComponentsBuilder
            .fromMethodCall(
                MvcUriComponentsBuilder.on(ScreeningRoomsItemJsonController.class).show(screeningRoom))
            .buildAndExpand(screeningRoom.getId()).encode();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param storedScreeningRoom
     * @param screeningRoom
     * @param result
     * @return ResponseEntity
     */
    @PutMapping(name = "update")
    public ResponseEntity<?> ScreeningRoomsItemJsonController.update(@ModelAttribute ScreeningRoom storedScreeningRoom, @Valid @RequestBody ScreeningRoom screeningRoom, BindingResult result) {
        
        if (result.hasErrors()) {
            return ResponseEntity.status(HttpStatus.CONFLICT).body(result);
        }
        screeningRoom.setId(storedScreeningRoom.getId());
        getScreeningRoomService().save(screeningRoom);
        return ResponseEntity.ok().build();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param screeningRoom
     * @return ResponseEntity
     */
    @DeleteMapping(name = "delete")
    public ResponseEntity<?> ScreeningRoomsItemJsonController.delete(@ModelAttribute ScreeningRoom screeningRoom) {
        getScreeningRoomService().delete(screeningRoom);
        return ResponseEntity.ok().build();
    }
    
}
