// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.mar.service.impl;

import com.mar.entities.Movie;
import com.mar.entities.Showing;
import com.mar.repository.MovieRepository;
import com.mar.service.impl.MovieServiceImpl;
import io.springlets.data.domain.GlobalSearch;
import io.springlets.data.web.validation.MessageI18n;
import java.util.List;
import java.util.Map;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect MovieServiceImpl_Roo_Service_Impl {
    
    declare @type: MovieServiceImpl: @Service;
    
    declare @type: MovieServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private MovieRepository MovieServiceImpl.movieRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param movieRepository
     */
    @Autowired
    public MovieServiceImpl.new(MovieRepository movieRepository) {
        setMovieRepository(movieRepository);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return MovieRepository
     */
    public MovieRepository MovieServiceImpl.getMovieRepository() {
        return movieRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param movieRepository
     */
    public void MovieServiceImpl.setMovieRepository(MovieRepository movieRepository) {
        this.movieRepository = movieRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param movie
     * @return Map
     */
    public Map<String, List<MessageI18n>> MovieServiceImpl.validate(Movie movie) {
        Map<String, List<MessageI18n>> messages = new java.util.HashMap<String, List<MessageI18n>>();
        
        // TODO: IMPLEMENT HERE THE VALIDATION OF YOUR ENTITY
        
        return messages;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param movie
     */
    @Transactional
    public void MovieServiceImpl.delete(Movie movie) {
        getMovieRepository().delete(movie);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<Movie> MovieServiceImpl.save(Iterable<Movie> entities) {
        return getMovieRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void MovieServiceImpl.delete(Iterable<Long> ids) {
        List<Movie> toDelete = getMovieRepository().findAll(ids);
        getMovieRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return Movie
     */
    @Transactional
    public Movie MovieServiceImpl.save(Movie entity) {
        return getMovieRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Movie
     */
    public Movie MovieServiceImpl.findOne(Long id) {
        return getMovieRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Movie
     */
    public Movie MovieServiceImpl.findOneForUpdate(Long id) {
        return getMovieRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<Movie> MovieServiceImpl.findAll(Iterable<Long> ids) {
        return getMovieRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<Movie> MovieServiceImpl.findAll() {
        return getMovieRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long MovieServiceImpl.count() {
        return getMovieRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Movie> MovieServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getMovieRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Movie> MovieServiceImpl.findAllByIdsIn(List<Long> ids, GlobalSearch globalSearch, Pageable pageable) {
        return getMovieRepository().findAllByIdsIn(ids, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param showing
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Movie> MovieServiceImpl.findByShowing(Showing showing, GlobalSearch globalSearch, Pageable pageable) {
        return getMovieRepository().findByShowing(showing, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param showing
     * @return Long
     */
    public long MovieServiceImpl.countByShowing(Showing showing) {
        return getMovieRepository().countByShowing(showing);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Movie> MovieServiceImpl.getEntityType() {
        return Movie.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> MovieServiceImpl.getIdType() {
        return Long.class;
    }
    
}
