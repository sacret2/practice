// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.mar.service.impl;

import com.mar.entities.ScreeningRoom;
import com.mar.repository.ScreeningRoomRepository;
import com.mar.service.impl.ScreeningRoomServiceImpl;
import io.springlets.data.domain.GlobalSearch;
import io.springlets.data.web.validation.MessageI18n;
import java.util.List;
import java.util.Map;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect ScreeningRoomServiceImpl_Roo_Service_Impl {
    
    declare @type: ScreeningRoomServiceImpl: @Service;
    
    declare @type: ScreeningRoomServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private ScreeningRoomRepository ScreeningRoomServiceImpl.screeningRoomRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param screeningRoomRepository
     */
    @Autowired
    public ScreeningRoomServiceImpl.new(ScreeningRoomRepository screeningRoomRepository) {
        setScreeningRoomRepository(screeningRoomRepository);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return ScreeningRoomRepository
     */
    public ScreeningRoomRepository ScreeningRoomServiceImpl.getScreeningRoomRepository() {
        return screeningRoomRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param screeningRoomRepository
     */
    public void ScreeningRoomServiceImpl.setScreeningRoomRepository(ScreeningRoomRepository screeningRoomRepository) {
        this.screeningRoomRepository = screeningRoomRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param screeningroom
     * @return Map
     */
    public Map<String, List<MessageI18n>> ScreeningRoomServiceImpl.validate(ScreeningRoom screeningroom) {
        Map<String, List<MessageI18n>> messages = new java.util.HashMap<String, List<MessageI18n>>();
        
        // TODO: IMPLEMENT HERE THE VALIDATION OF YOUR ENTITY
        
        return messages;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param screeningRoom
     */
    @Transactional
    public void ScreeningRoomServiceImpl.delete(ScreeningRoom screeningRoom) {
        getScreeningRoomRepository().delete(screeningRoom);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<ScreeningRoom> ScreeningRoomServiceImpl.save(Iterable<ScreeningRoom> entities) {
        return getScreeningRoomRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void ScreeningRoomServiceImpl.delete(Iterable<Long> ids) {
        List<ScreeningRoom> toDelete = getScreeningRoomRepository().findAll(ids);
        getScreeningRoomRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return ScreeningRoom
     */
    @Transactional
    public ScreeningRoom ScreeningRoomServiceImpl.save(ScreeningRoom entity) {
        return getScreeningRoomRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return ScreeningRoom
     */
    public ScreeningRoom ScreeningRoomServiceImpl.findOne(Long id) {
        return getScreeningRoomRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return ScreeningRoom
     */
    public ScreeningRoom ScreeningRoomServiceImpl.findOneForUpdate(Long id) {
        return getScreeningRoomRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<ScreeningRoom> ScreeningRoomServiceImpl.findAll(Iterable<Long> ids) {
        return getScreeningRoomRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<ScreeningRoom> ScreeningRoomServiceImpl.findAll() {
        return getScreeningRoomRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long ScreeningRoomServiceImpl.count() {
        return getScreeningRoomRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<ScreeningRoom> ScreeningRoomServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getScreeningRoomRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<ScreeningRoom> ScreeningRoomServiceImpl.findAllByIdsIn(List<Long> ids, GlobalSearch globalSearch, Pageable pageable) {
        return getScreeningRoomRepository().findAllByIdsIn(ids, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<ScreeningRoom> ScreeningRoomServiceImpl.getEntityType() {
        return ScreeningRoom.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> ScreeningRoomServiceImpl.getIdType() {
        return Long.class;
    }
    
}
