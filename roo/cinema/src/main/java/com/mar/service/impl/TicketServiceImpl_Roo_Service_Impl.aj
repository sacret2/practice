// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.mar.service.impl;

import com.mar.entities.Client;
import com.mar.entities.Ticket;
import com.mar.repository.TicketRepository;
import com.mar.service.impl.TicketServiceImpl;
import io.springlets.data.domain.GlobalSearch;
import io.springlets.data.web.validation.MessageI18n;
import java.util.List;
import java.util.Map;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect TicketServiceImpl_Roo_Service_Impl {
    
    declare @type: TicketServiceImpl: @Service;
    
    declare @type: TicketServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private TicketRepository TicketServiceImpl.ticketRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param ticketRepository
     */
    @Autowired
    public TicketServiceImpl.new(TicketRepository ticketRepository) {
        setTicketRepository(ticketRepository);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return TicketRepository
     */
    public TicketRepository TicketServiceImpl.getTicketRepository() {
        return ticketRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ticketRepository
     */
    public void TicketServiceImpl.setTicketRepository(TicketRepository ticketRepository) {
        this.ticketRepository = ticketRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ticket
     * @return Map
     */
    public Map<String, List<MessageI18n>> TicketServiceImpl.validate(Ticket ticket) {
        Map<String, List<MessageI18n>> messages = new java.util.HashMap<String, List<MessageI18n>>();
        
        // TODO: IMPLEMENT HERE THE VALIDATION OF YOUR ENTITY
        
        return messages;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ticket
     */
    @Transactional
    public void TicketServiceImpl.delete(Ticket ticket) {
        // Clear bidirectional many-to-one child relationship with Client
        if (ticket.getClient() != null) {
            ticket.getClient().getTickets().remove(ticket);
        }
        
        // Clear bidirectional one-to-one parent relationship with Showing
        ticket.removeFromShowing();
        
        getTicketRepository().delete(ticket);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<Ticket> TicketServiceImpl.save(Iterable<Ticket> entities) {
        return getTicketRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void TicketServiceImpl.delete(Iterable<Long> ids) {
        List<Ticket> toDelete = getTicketRepository().findAll(ids);
        getTicketRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return Ticket
     */
    @Transactional
    public Ticket TicketServiceImpl.save(Ticket entity) {
        
        // Ensure the relationships are maintained
        entity.addToShowing(entity.getShowing());
        
        return getTicketRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Ticket
     */
    public Ticket TicketServiceImpl.findOne(Long id) {
        return getTicketRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Ticket
     */
    public Ticket TicketServiceImpl.findOneForUpdate(Long id) {
        return getTicketRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<Ticket> TicketServiceImpl.findAll(Iterable<Long> ids) {
        return getTicketRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<Ticket> TicketServiceImpl.findAll() {
        return getTicketRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long TicketServiceImpl.count() {
        return getTicketRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Ticket> TicketServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getTicketRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Ticket> TicketServiceImpl.findAllByIdsIn(List<Long> ids, GlobalSearch globalSearch, Pageable pageable) {
        return getTicketRepository().findAllByIdsIn(ids, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param client
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Ticket> TicketServiceImpl.findByClient(Client client, GlobalSearch globalSearch, Pageable pageable) {
        return getTicketRepository().findByClient(client, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param client
     * @return Long
     */
    public long TicketServiceImpl.countByClient(Client client) {
        return getTicketRepository().countByClient(client);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Ticket> TicketServiceImpl.getEntityType() {
        return Ticket.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> TicketServiceImpl.getIdType() {
        return Long.class;
    }
    
}
