// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.mar.service.impl;

import com.mar.entities.Showing;
import com.mar.repository.ShowingRepository;
import com.mar.service.impl.ShowingServiceImpl;
import io.springlets.data.domain.GlobalSearch;
import io.springlets.data.web.validation.MessageI18n;
import java.util.List;
import java.util.Map;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect ShowingServiceImpl_Roo_Service_Impl {
    
    declare @type: ShowingServiceImpl: @Service;
    
    declare @type: ShowingServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private ShowingRepository ShowingServiceImpl.showingRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param showingRepository
     */
    @Autowired
    public ShowingServiceImpl.new(ShowingRepository showingRepository) {
        setShowingRepository(showingRepository);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return ShowingRepository
     */
    public ShowingRepository ShowingServiceImpl.getShowingRepository() {
        return showingRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param showingRepository
     */
    public void ShowingServiceImpl.setShowingRepository(ShowingRepository showingRepository) {
        this.showingRepository = showingRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param showing
     * @return Map
     */
    public Map<String, List<MessageI18n>> ShowingServiceImpl.validate(Showing showing) {
        Map<String, List<MessageI18n>> messages = new java.util.HashMap<String, List<MessageI18n>>();
        
        // TODO: IMPLEMENT HERE THE VALIDATION OF YOUR ENTITY
        
        return messages;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param showing
     */
    @Transactional
    public void ShowingServiceImpl.delete(Showing showing) {
        // Clear bidirectional one-to-one parent relationship with Movie
        showing.removeFromMovie();
        
        getShowingRepository().delete(showing);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<Showing> ShowingServiceImpl.save(Iterable<Showing> entities) {
        return getShowingRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void ShowingServiceImpl.delete(Iterable<Long> ids) {
        List<Showing> toDelete = getShowingRepository().findAll(ids);
        getShowingRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return Showing
     */
    @Transactional
    public Showing ShowingServiceImpl.save(Showing entity) {
        
        // Ensure the relationships are maintained
        entity.addToMovie(entity.getMovie());
        
        return getShowingRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Showing
     */
    public Showing ShowingServiceImpl.findOne(Long id) {
        return getShowingRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Showing
     */
    public Showing ShowingServiceImpl.findOneForUpdate(Long id) {
        return getShowingRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<Showing> ShowingServiceImpl.findAll(Iterable<Long> ids) {
        return getShowingRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<Showing> ShowingServiceImpl.findAll() {
        return getShowingRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long ShowingServiceImpl.count() {
        return getShowingRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Showing> ShowingServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getShowingRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Showing> ShowingServiceImpl.findAllByIdsIn(List<Long> ids, GlobalSearch globalSearch, Pageable pageable) {
        return getShowingRepository().findAllByIdsIn(ids, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Showing> ShowingServiceImpl.getEntityType() {
        return Showing.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> ShowingServiceImpl.getIdType() {
        return Long.class;
    }
    
}
